<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>com.example.app</artifactId>
	<version>0.21</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.agenarisk</groupId>
			<artifactId>com.agenarisk.core</artifactId>
			<version>8294</version>
		</dependency>

		<dependency>
			<groupId>com.agenarisk</groupId>
			<artifactId>com.agenarisk.api</artifactId>
			<version>0.993</version>
		</dependency>

	</dependencies>

	<build>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<!--Launch new demo-->
					<execution>
						<id>demo</id>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>example.Demo</mainClass>
						</configuration>
					</execution>

					<!--Launch new demo-->
					<execution>
						<id>demo-legacy</id>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>example.legacy.DemoLegacy</mainClass>
						</configuration>
					</execution>

					<!--Activate AgenaRisk 10 Developer-->
					<execution>
						<id>activate</id>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>com.agenarisk.api.util.Launcher</mainClass>
						</configuration>
					</execution>

					<!--Launch custom main class-->
					<execution>
						<id>custom</id>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--Download non-Java dependencies to Lib during Clean phase-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}/lib</directory>
							<includes>
								<include>**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>download-cryptlex</id>
						<phase>clean</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://resources.agenarisk.com/download/archive/lib-v3.zip</url>
							<outputDirectory>${project.basedir}/lib</outputDirectory>
							<unpack>true</unpack>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
					<execution>
						<id>download-product-v2</id>
						<phase>clean</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://resources.agenarisk.com/products/zip/developer.zip</url>
							<outputDirectory>${project.basedir}/lib/</outputDirectory>
							<unpack>true</unpack>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
					<execution>
						<id>download-product-v3</id>
						<phase>clean</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://resources.agenarisk.com/products/v3/developer/product.json</url>
							<outputDirectory>${project.basedir}/lib/</outputDirectory>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy all non-Java dependencies to target/lib during build phase -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!--<filtering>true</filtering>-->
			</resource>
		</resources>

	</build>

	<repositories>
		<repository>
			<id>archiva.internal</id>
			<name>Internal Release Repository</name>
			<url>http://mvn.agenarisk.com/repository/internal/</url>
		</repository>

		<repository>
			<id>archiva.snapshots</id>
			<name>Internal Release Repository</name>
			<url>http://mvn.agenarisk.com/repository/snapshots/</url>
		</repository>
	</repositories>

</project>